/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   handle_mouse.c                                     :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: amelihov <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2018/08/13 21:39:34 by amelihov          #+#    #+#             */
/*   Updated: 2018/08/14 14:17:06 by amelihov         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "scene.h"
#include "options.h"
#include "drawer.h"
#include "ray.h"
#include "intersection.h"

t_vect3d	get_ray_dir(t_camera camera, double x, double y,
			t_canvas canvas);

short	find_closest_intersection(const t_scene *scene, t_ray ray,
		t_intersection *intersection);

short	handle_mouse_down(SDL_Event event, t_options *opts, t_scene *scene,
		const t_drawer *drawer)
{
	t_ray			ray;
	t_intersection	isect;
	unsigned int	i;

	if (event.button.button != SDL_BUTTON_LEFT)
		return (0);
	ray.o = scene->camera.pos;	
	ray.d = get_ray_dir(scene->camera, event.button.x, event.button.y,
			drawer->canvas);
	if (!find_closest_intersection(scene, ray, &isect))
		return (0);
	i = 0;
	while (i < scene->objects.size)
	{
		if (isect.hit_object == &scene->objects.data[i])
		{
			opts->object_index = i;
			break ;
		}
		i++;
	}
	return (1);
}
